pipeline {
    agent { label 'main' }

    parameters {
        string(
        name: 'CLEAN_UP',
        defaultValue: 'false',
        description: 'Do cleanup before build')
    }
    options {
        copyArtifactPermission('docker/Docker-Server-Manager')
    }
    stages {
      stage('Checkout') {
      steps {
        echo 'checkout'
      }
      }

      stage('NPM Install') {
      steps {
        echo 'npm install'
          dir('frontend') {
            nodejs(nodeJSInstallationName: 'Node JS') {
              sh 'npm install'
            }
          }
      }
      }

      stage('Lint') {
      steps {
        echo 'Lint'
        dir('frontend') {
        //sh 'ng lint'
        }
      }
      }

      stage('Build') {
      //milestone()
      steps {
          dir('frontend') {
            nodejs(nodeJSInstallationName: 'Node JS') {
              sh 'ng build'
            }
          }
      }
      }

      stage('Archive') {
      steps {
        echo 'Archive'
      //sh 'tar -cvzf dist.tar.gz --strip-components=1 dist'
      //archive 'dist.tar.gz'
      }
      }

      stage('Create Build Artifakt') {
      steps {
        echo 'Create Build Artifakt'
      }
      }

      stage('Create Artifact') {
          steps {
        sh 'mkdir -p target/zipfile_content'
        echo 'copying resources for zip file into target/zipfile_content'
        sh 'cp -r frontend/dist/server-manager-frontend target/zipfile_content'
        //sh "cp -r templates target/zipfile_content"
        //sh "cp target/release/rustwebserver target/zipfile_content"
        echo 'creating zip file'
        zip zipFile: 'target/server-manager-frontent.zip', archive: true, dir: 'target/zipfile_content', overwrite: true
          }
      }
    }

    post {
        always {
          archiveArtifacts artifacts: 'target/server-manager-frontent.zip', fingerprint: true

          emailext body: "Build '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
          recipientProviders: [developers(), requestor()],
          subject: "jenkins build:${currentBuild.currentResult}: ${env.JOB_NAME}",
          to: 'christopher@christopherfuchs.de'
        }
    }
}
