{
    "id": "dockerport",
    "name": "Docker by TCP Port",
    "description": "Can interact with Docker containers running also on a remote machine by connecting over a TCP port",
    "server_icon": "<svg fill=\"#000000\" width=\"25px\" height=\"25px\" viewBox=\"0 0 36 36\" version=\"1.1\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g><g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"> <title></title> <path d=\"M21.08,34h-14A1.08,1.08,0,0,1,6,33V12a1.08,1.08,0,0,1,1.08-1.08h14A1.08,1.08,0,0,1,22.16,12V33A1.08,1.08,0,0,1,21.08,34ZM8.16,31.88H20V13H8.16Z\" class=\"clr-i-outline clr-i-outline-path-1\"></path><rect x=\"10.08\" y=\"14.96\" width=\"8\" height=\"2\" class=\"clr-i-outline clr-i-outline-path-2\"></rect><path d=\"M26.1,27.81h-2V9h-12V7h13a1,1,0,0,1,1,1Z\" class=\"clr-i-outline clr-i-outline-path-3\"></path><path d=\"M30.08,23h-2V5h-11V3h12a1,1,0,0,1,1,1Z\" class=\"clr-i-outline clr-i-outline-path-4\"></path><rect x=\"13.08\" y=\"27.88\" width=\"2\" height=\"2.16\" class=\"clr-i-outline clr-i-outline-path-5\"></rect> <rect x=\"0\" y=\"0\" width=\"36\" height=\"36\" fill-opacity=\"0\"></rect> </g></svg>",
    "detection": {
        "list": [
            {
                "params": [
                    {
                        "name": "port",
                        "param_type": "number",
                        "default_value": "2375"
                    },
                    {
                        "name": "protocol",
                        "param_type": "string",
                        "default_value": "http"
                    }
                ],
                "args": [
                    {
                        "name": "method",
                        "value": "get"
                    },
                    {
                        "name": "url",
                        "value": "${params.protocol}://${IP}:${params.port}"
                    }
                ]
            },
            {
                "params": [
                    {
                        "name": "port",
                        "param_type": "number",
                        "default_value": "2376"
                    },
                    {
                        "name": "protocol",
                        "param_type": "string",
                        "default_value": "https"
                    }
                ],
                "args": [
                    {
                        "name": "method",
                        "value": "get"
                    },
                    {
                        "name": "url",
                        "value": "${params.protocol}://${IP}:${params.port}"
                    }
                ]
            }
        ],
        "script": {
            "script_type": "lua",
            "script": "string.len(input) > 4"
        },
        "detection_possible": true
    },
    "credentials": [],
    "data": [
        {
            "id": "listcontainers",
            "description": "List all containers",
            "template": "docker/data_container-list",
            "command": "http",
            "post_process": {
                "script_type": "lua",
                "script": "'{\"data\": ' .. string.sub(input,string.find(input, '%['), string.find(input, '%][^%]]*$') ) .. '}'"
            },      
            "args": [
                {
                    "name": "method",
                    "value": "get"
                },
                {
                    "name": "url",
                    "value": "${params.protocol}://${IP}:${params.port}/containers/json"
                }
            ]
        }
    ],
    "params": [
        {
          "name": "port",
          "param_type": "number",
          "default_value": "2375"
        },
        {
          "name": "protocol",
          "param_type": "string",
          "default_value": "http"
        }
    ],
    "actions": []
}